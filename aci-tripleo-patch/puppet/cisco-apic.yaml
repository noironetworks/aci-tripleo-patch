heat_template_version: 2015-04-30

description: Configure hieradata for Cisco Apic configuration

parameters:
  servers:
    description: ID of the controller node to apply this config to
    type: json
  input_values:
    type: json
  # Config specific parameters, to be provided via parameter_defaults
  ACIApicIp:
    type: string
    default: '192.0.0.2'
  ACIApicUser:
    type: string
    default: 'admin'
  ACIApicPassword:
    type: string
    default: 'password'
  ACIApicSystemId:
    type: string
    default: 'openstack1'
  ACIApicInfraVlan:
    type: number
    default: 4093
  ACIApicEntityProfile:
    type: string
    default: 'openstack-aep'
  ACIOpflexPeerIp:
    type: string
    default: '10.0.0.30'
  ACIOpflexRemoteIp:
    type: string
    default: '10.0.0.32'
  ACIOpflexOVSBridge:
    type: string
    default: 'br-int'
  ACIOpflexUplinkInterface:
    type: string
    default: 'nic1'
  ACIOpflexBridgeToPatch:
    type: string
    default: 'br-ex'
  ACIUseLLDPDiscovery:
    type: boolean
    default: true
  ACIOpflexEncapMode:
    type: string
    default: 'vxlan'  
    constraints:
      - allowed_values: ['vlan', 'vxlan']
  ACIOpflexOptimizedMetadata:
    type: boolean
    default: true
  ACIOpflexOptimizedDhcp:
    type: boolean
    default: true
  ACIEnableAIM:
    type: boolean
    default: false
  NeutronPassword:
    default: unset
    description: The password for the neutron service and db account, used by neutron agents.
    type: string
    hidden: true
  NeutronMetadataProxySharedSecret:
    default: unset
    description: The metadata shared secret
    type: string
    hidden: true
  ACIOpflexMechanism:
    type: string
    default: 'cisco_apic_ml2'
    description: Neutron mechanism to use, either cisco_apic_ml2 or apic_gbp
    constraints:
      - allowed_values: ['cisco_apic_ml2', 'apic_gbp']
  ACIL3Out:
    type: string
    default: ''
    description: comma separated string representing ext. network name and associated epg. Example 'ext1:ext1epg, ext2:ext2epg'
  ACIVpcPairs:
    type: string
    default: ''
    description: comma separated string of switch id's which form vpc pairs. Example '101:102,103:104'

resources:
  CiscoApicOpenstackConfig:
    type: OS::Heat::StructuredConfig
    properties:
      group: os-apply-config
      config:
        hiera:
          datafiles:
            cisco_aci_data:
              #raw_data: {get_file: /usr/share/openstack-tripleo-heat-templates/puppet/hieradata/controller.yaml}
              mapped_data:
                apic_gbp::opflex_agent::opflex_peer_ip: {get_input: opflex_peer_ip}
                apic_gbp::opflex_agent::opflex_remote_ip: {get_input: opflex_remote_ip}
                apic_gbp::opflex_agent::opflex_ovs_bridge: {get_input: opflex_ovs_bridge}
                apic_gbp::opflex_agent::opflex_apic_domain_name: {get_input: apic_system_id}
                apic_gbp::opflex_agent::opflex_uplink_iface: {get_input: opflex_uplink_iface}
                apic_gbp::opflex_agent::opflex_uplink_vlan: {get_input: opflex_uplink_vlan}
                apic_gbp::opflex_agent::opflex_encap_mode: {get_input: opflex_encap_mode}
                neutron::plugins::ml2::cisco::apic_ml2::use_lldp_discovery: {get_input: lldp_discovery}
                apic_gbp::opflex_agent::opflex_target_bridge_to_patch: {get_input: opflex_target_bridge_to_patch}
                apic_gbp::compute::optimized_metadata: {get_input: optimized_neutron_metadata}
                neutron::plugins::ml2::cisco::apic_ml2::apic_hosts: {get_input: apic_hosts}
                neutron::plugins::ml2::cisco::apic_ml2::apic_username: {get_input: apic_username}
                neutron::plugins::ml2::cisco::apic_ml2::apic_password: {get_input: apic_password}
                neutron::plugins::ml2::cisco::apic_ml2::apic_system_id: {get_input: apic_system_id}
                neutron::plugins::ml2::cisco::apic_ml2::encap_mode: {get_input: opflex_encap_mode}
                neutron::plugins::ml2::cisco::apic_ml2::apic_entity_profile: {get_input: apic_aep}
                neutron::plugins::ml2::cisco::apic_ml2::apic_l3out: {get_input: apic_l3out}
                neutron::plugins::ml2::cisco::apic_ml2::apic_vpcpairs: {get_input: apic_vpcpairs}
                neutron::plugins::ml2::cisco::apic_ml2::optimized_dhcp: {get_input: optimized_neutron_dhcp}
                neutron::plugins::ml2::cisco::apic_ml2::optimized_metadata: {get_input: optimized_neutron_metadata}
                neutron::plugins::ml2::cisco::apic_ml2::enable_aim: {get_input: enable_aim}
                neutron::agents::metadata::auth_password: {get_input: neutron_password}
                neutron::agents::metadata::shared_secret: {get_input: neutron_metadata_shared_secret}
                cisco::apic::opflex::neutron_mechanism: {get_input: opflex_neutron_mechanism}
                cisco::apic::enable_aim: {get_input: enable_aim}
                neutron::plugins::apic_gbp::apic_hosts: {get_input: apic_hosts}
                neutron::plugins::apic_gbp::apic_username: {get_input: apic_username}
                neutron::plugins::apic_gbp::apic_password: {get_input: apic_password}
                neutron::plugins::apic_gbp::apic_system_id: {get_input: apic_system_id}
                neutron::plugins::apic_gbp::encap_mode: {get_input: opflex_encap_mode}
                neutron::plugins::apic_gbp::use_lldp_discovery: {get_input: lldp_discovery}
                neutron::plugins::apic_gbp::apic_entity_profile: {get_input: apic_aep}
                neutron::plugins::apic_gbp::apic_l3out: {get_input: apic_l3out}
                neutron::plugins::apic_gbp::apic_vpcpairs: {get_input: apic_vpcpairs}
                neutron::plugins::apic_gbp::optimized_dhcp: {get_input: optimized_neutron_dhcp}
                neutron::plugins::apic_gbp::optimized_metadata: {get_input: optimized_neutron_metadata}
                neutron::plugins::apic_gbp::enable_aim: {get_input: enable_aim}
  CiscoApicOpenstackDeployment:
    type: OS::Heat::StructuredDeployments
    properties:
      config: {get_resource: CiscoApicOpenstackConfig}
      servers: {get_param: servers}
      input_values:
        opflex_peer_ip: {get_param: ACIOpflexPeerIp}
        opflex_remote_ip: {get_param: ACIOpflexRemoteIp}
        opflex_ovs_bridge: {get_param: ACIOpflexOVSBridge}
        apic_system_id: {get_param: ACIApicSystemId}
        opflex_uplink_iface: {get_param: ACIOpflexUplinkInterface}
        opflex_uplink_vlan: {get_param: ACIApicInfraVlan}
        opflex_encap_mode: {get_param: ACIOpflexEncapMode}
        opflex_target_bridge_to_patch: {get_param: ACIOpflexBridgeToPatch}
        apic_hosts: {get_param: ACIApicIp}
        apic_username: {get_param: ACIApicUser}
        apic_password: {get_param: ACIApicPassword}
        lldp_discovery: {get_param: ACIUseLLDPDiscovery}
        apic_aep: {get_param: ACIApicEntityProfile}
        optimized_neutron_metadata: {get_param: ACIOpflexOptimizedMetadata}
        optimized_neutron_dhcp: {get_param: ACIOpflexOptimizedDhcp}
        neutron_password: {get_param: NeutronPassword}
        neutron_metadata_shared_secret: {get_param: NeutronMetadataProxySharedSecret}
        opflex_neutron_mechanism: {get_param: ACIOpflexMechanism}
        enable_aim: {get_param: ACIEnableAIM}
        apic_l3out: {get_param: ACIL3Out}
        apic_vpcpairs: {get_param: ACIVpcPairs}
outputs:
  deploy_stdout:
    description: Deployment reference, used to trigger puppet apply on changes
    value: {get_attr: [CiscoApicOpenstackDeployment, deploy_stdout]}
